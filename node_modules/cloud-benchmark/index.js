var request = require('request');
var MongoClient = require('mongodb').MongoClient;
var elasticSearch = require('elasticSearch');
var cloudDB;
var clouds = []; // clouds array to hold endpoints for all instances to test
var routes = []; // routes array to hold routes to test
var interval;
var number_of_trials;

exports.clouds = clouds;
exports.routes = routes;

var client = new elasticSearch.Client({
    host: 'search-candidates-cjppiuv3s4xsksv4prai7gcohm.us-west-2.es.amazonaws.com',
    log: 'trace'
});
// client.indices.create({ // create index
//     index: 'routes',
//     body: {
//     }
// });


// clouds setter method to add endpoints
// url is only the route after initial /
exports.insertCloud = function(url) {
    clouds.push(url);
    // insert to MongoDB
    // Connect to the db
}

exports.removeCloud = function(url) {
    var index = clouds.indexOf(url);
    clouds.splice(index, 1);

    // remove from MongoDB
}

exports.printClouds = function() {
    console.log(clouds);
}

exports.insertRoute = function testRoute(method, url, parameters) {
    var new_route;
    if(parameters){
        new_route = [method, url, parameters];
    } else {
        new_route = [method, url]
    }
    routes.push(new_route);
    // insert new_route into MongoDB
}

exports.removeRoute = function(url) {
    var index = routes.indexOf(url);
    routes.splice(index, 1);
}

exports.printRoutes = function() {
    console.log(routes);
}

exports.interval = function(interval_in_hrs) {
    // convert new_interval from hours to seconds
    interval = interval_in_hrs * 60 * 60;
    // convert from seconds to ms
    interval = interval * 1000;
    console.log(interval);
}
exports.number_of_trials = function(numTrials) {
    number_of_trials = numTrials;
    console.log("Number of trials " + number_of_trials);
}

interval = 2000;
setInterval(benchmark, interval);

function benchmark() {
    // repeat benchmark for specified number of trials
    for(var k = 0; k < number_of_trials; k++) {
        // iterate through each route, and test every cloud for each route
        for(var i = 0; i < routes.length; i++) {
            for(var j = 0; j < clouds.length; j++) {
                console.log(clouds[i]);
                //start timer
                var start = Date.now();
                // console.time("cloud-request");
                // send request to instance
                if(method == "GET") {
                    request
                        .get(clouds[i])
                        .on('response', function(response) {
                            //stop timer
                            var end = Date.now();
                            var time = end-start;
                            console.log(time + " msec");

                            // store time in Elastic Search

                            console.log("Response");
                    });
                }
                // TODO
                // if(method == "POST") {
                //
                // }
            }
        }
    }
}

// method to test routes
// exports.testRoute = function testRoute(method, url, parameters) {
//     console.log("test");
//
//     for(var i = 0; i < clouds.length; i++) {
//         console.log(clouds[i]);
//         //start timer
//         var start = Date.now();
//         // console.time("cloud-request");
//         //send request to instance
//         if(method == "GET") {
//             request
//                 .get(clouds[i])
//                 .on('response', function(response) {
//                     //stop timer
//                     var end = Date.now();
//                     var time = end-start;
//                     console.log(time + " msec");
//
//                     // store time in MongoDB
//
//                     console.log("Response");
//             });
//         }
//         // TODO
//         if(method == "POST") {
//
//         }
//     }
// }


// client.update({
//     index: 'routes',
//     type: 'route',
//     body: {
//         route: GetIndex,
//         cloud: AWS,
//         time_of_day: "3AM",
//         response_time: 300 ms
//     }
// }, function (error, response) {
// });
