var request = require('request');
var MongoClient = require('mongodb').MongoClient;
var cloudDB;
var elasticSearch = require('elasticSearch');

var client = new elasticSearch.Client({
    host: 'search-candidates-cjppiuv3s4xsksv4prai7gcohm.us-west-2.es.amazonaws.com',
    log: 'trace'
});

// create index
client.indices.create({
    index: 'routes',
    body: {
    }
});
client.update({
    index: 'routes',
    type: 'route',
    body: {
        route: GetIndex,
        cloud: AWS,
        time_of_day: "3AM",
        response_time: 300 ms
    }
}, function (error, response) {
});

// Connect to the db
MongoClient.connect("mongodb://localhost:27017/cb", function(err, db) {
    if(!err) {
        db.createCollection('clouds', function(err, collection) {});
        console.log("Connected to MongoDB");
    }
});

// clouds array to hold endpoints for all instances to test
var clouds = [];

// routes array to hold routes to test
var routes = [];

exports.clouds = clouds;
exports.routes = routes;

// clouds setter method to add endpoints
// url is only the route after initial /
exports.insertCloud = function(url) {
    clouds.push(url);
    // insert to MongoDB
    // Connect to the db
    MongoClient.connect("mongodb://localhost:27017/cb", function(err, db) {
        if(!err) {
            cloudDB = db.collection('clouds');
            var doc1 = {
                'url' : 'url',
                'routes' : ''
            };
            var search = cloudDB.find( { "testURL" : url});
            console.log(search.cursorState.cursorId);
            if(search.cursorState.cursorId == "null") {
                cloudDB.insert(doc1, {w: 1}, function(err, result){
                    console.log("Inserting into mongodb");
                    console.log("Result: " + result);
                    console.log("err: " + err);
                });
            }
            else {
                console.log("not null");
            }
        }
        else {
            console.log("error");
            console.log(err);
        }
    });
}

exports.removeCloud = function(url) {
    var index = clouds.indexOf(url);
    clouds.splice(index, 1);

    // remove from MongoDB
}

exports.printClouds = function() {
  console.log(clouds);
}

// method to test routes
exports.testRoute = function testRoute(method, url, parameters) {
    console.log("test");

    for(var i = 0; i < clouds.length; i++) {
        console.log(clouds[i]);
        //start timer
        var start = Date.now();
        // console.time("cloud-request");
        //send request to instance
        if(method == "GET") {
            request
                .get(clouds[i])
                .on('response', function(response) {
                    //stop timer
                    var end = Date.now();
                    var time = end-start;
                    console.log(time + " msec");

                    // store time in MongoDB

                    console.log("Response");
            });
        }
        // TODO
        if(method == "POST") {

        }
    }
}

exports.insertRoute = function testRoute(method, url, parameters) {
    var new_route;
    if(parameters){
        new_route = [method, url, parameters];
    } else {
        new_route = [method, url]
    }
    routes.push(new_route);
    // insert new_route into MongoDB
}

exports.removeRoute = function(url) {
    var index = routes.indexOf(url);
    routes.splice(index, 1);
}

exports.printRoutes = function() {
    console.log(routes);
}
